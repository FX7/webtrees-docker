name: Check and Push Updates

on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

jobs:
  getversions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Get Versions
        id: set-matrix
        run: |
          echo "::echo::on"
          echo "::set-output name=matrix::$(python3 versionchecker.py)"

  buildversions:
    needs: getversions
    if: ${{ fromJSON(needs.getversions.outputs.matrix).include[0] != null }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.getversions.outputs.matrix) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Dockerhub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Github CR Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: nthnv.me CR Login
        uses: docker/login-action@v2
        with:
          registry: cr.nthnv.me
          username: ${{ secrets.NTHNVCR_USERNAME }}
          password: ${{ secrets.NTHNVCR_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          tags: ${{ matrix.images }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: WEBTREES_VERSION=${{ matrix.webtrees_version }}
          push: true

      - name: Create Tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag : ${{ matrix.webtrees_version }}

      - name: Build Release Notes
        # https://trstringer.com/github-actions-multiline-strings/
        run: |
          echo "IMAGE_LIST<<EOF" >> $GITHUB_ENV
          python3 -c "m='${{ matrix.images }}';[print(f'- {i}') for i in m.split(',')]" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ matrix.prerelease }}
          tag_name: ${{ matrix.webtrees_version }}
          body: |
            Automated release for webtrees version ${{ matrix.webtrees_version }}: ${{ matrix.src_url }}
            Tags pushed:
            ${{ env.IMAGE_LIST }}