name: Check and Push Updates

on:
  schedule:
    - cron:  '0 12 * * *'
  repository_dispatch:

jobs:
  main:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@master
      with:
        ref: master

    - name: Cache Pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip-${{ hashFiles('**/requirements.txt') }}

    - name: Setup Python 3.8
      uses: actions/setup-python@v2.1.1
      with:
        python-version: 3.8

    - name: Install pip Requirements
      run: pip3 install -r requirements.txt

    - name: Check For Updates
      run: echo "::set-env name=WT_UPDATE::$(python3 updater.py --check)"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Only run the following if update(s) are needed
    # Set by the 'WT_UPDATE' environment variable being 'true'

    - name: Determine Week
      if: env.WT_UPDATE == 'true'
      run: echo "::set-env name=WEEK::$(date +%V)"

    - name: Cache Docker Layers
      if: env.WT_UPDATE == 'true'
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: buildx-${ WEEK }

    - name: Set up Docker Buildx
      if: env.WT_UPDATE == 'true'
      uses: crazy-max/ghaction-docker-buildx@v3.2.0
      with:
        buildx-version: latest
        qemu-version: latest

    - name: Create Builder
      if: env.WT_UPDATE == 'true'
      run: docker buildx create --use --name build --node build --driver-opt network=host

    - name: Dockerhub Login
      if: env.WT_UPDATE == 'true'
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: echo "${DOCKERHUB_PASSWORD}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin

    - name: Run Updater Script
      if: env.WT_UPDATE == 'true'
      run: python3 updater.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #BUILDX_PLATFORMS: ${{ steps.buildx.outputs.platforms }}

    - name: Clear Dockerhub Credentials
      if: always()
      run: rm -f ${HOME}/.docker/config.json
